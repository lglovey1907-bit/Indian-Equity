# Docker Configuration for Indian Equity Platform

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: indian-equity-postgres
    environment:
      POSTGRES_DB: indian_equity
      POSTGRES_USER: indian_equity_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - indian-equity-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: indian-equity-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - indian-equity-network
    restart: unless-stopped

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: indian-equity-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://indian_equity_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/indian_equity
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-key-change-in-production}
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - indian-equity-network
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: indian-equity-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - indian-equity-network
    restart: unless-stopped

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: indian-equity-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - indian-equity-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  indian-equity-network:
    driver: bridge